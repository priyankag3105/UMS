{"version":3,"sources":["./src/app/service/login.service.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/environments/environment.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/service/unlockuser.service.ts","./src/app/service/forgotpwd.service.ts","./src/app/service/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/unlock-user/unlock-user.component.ts","./src/app/unlock-user/unlock-user.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http:HttpClient) { }\n\n  saveLogin(data:any){\n    return this.http.post(`http://localhost:9090/login`,data, {responseType:'text'})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from './../service/user.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private userservice:UserService,private route:Router) { }\n\n  ngOnInit(): void {\n    this.getAllCountries()\n  }\n  register=new FormGroup({\n    'cityId': new FormControl(''),\n    'countryId': new FormControl(''),\n    'dob': new FormControl(''),\n    'email': new FormControl('',[Validators.required,Validators.email]),\n    'fname': new FormControl(''),\n    'gender': new FormControl(''),\n    'lname': new FormControl(''),\n    'phno': new FormControl('',[Validators.required,Validators.minLength(10)]),\n    'stateId': new FormControl(''),\n\n  })\ncountries:any;\nstates:any;\ncities:any;\n\n\n  getAllCountries(){\n    this.userservice.getCountries().subscribe((resonse:any)=>{this.countries=resonse},err=>{console.log(err)})\n  }\n\n  getstatesbycountryid(countryId:any){\n    this.userservice.getStatesByCountryId(countryId).subscribe((response:any)=>{this.states=response},err=>{console.log(err)})\n  }\n\n  getcitiesbystateid(stateId:any){\n    this.userservice.getCityByStateId(stateId).subscribe((response:any)=>{this.cities=response},err=>{console.log(err)})\n  }\n\n\n\n  checkemail:any;\n  emailcheck(register:FormGroup){\nthis.userservice.emailCheckUnique(register.value.email).subscribe((res)=>{\n  this.checkemail=res;\n  console.log(this.checkemail);\n  if(this.checkemail=='DUPLICATE'){\n    alert('enter new email id');\n  }\n  else{\n    this.saveUser()\n  }\n})\n  }\n  \n  saveUser(){\n    this.userservice.SaveRegisterdata(this.register.value)\n    .subscribe((res)=>{console.log(res)\n    \n  }\n  \n  )\n  alert('Check your email to unlock your account ');\n    // this.route.navigate([''])\n  }\n  // emailcheck(email:any){\n  //   this.userservice.uniqueemailcheck(email).subscribe((res)=>)\n  // }\n\n  // onSubmit(){\n  //   alert('hi');\n  //   console.log(this.register)\n  // }\n}\n","\n\n<div class=\"container\">\n    <div class=\"row justify-content-center \">\n        <div class=\"col-md-5 \">\n            <div class=\"card \">\n              <div class=\"text-center mb-2\">\n        <h3>Registration</h3>\n              </div>\n            <form [formGroup]=\"register\" >\n                <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">First Name</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" name=\"fname\" placeholder=\"\" formControlName=\"fname\">\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Last Name</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" name=\"lname\" placeholder=\"\" formControlName=\"lname\">\n                    </div>\n                  </div>\n                <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Email</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"email\" class=\"form-control\" (blur)=\"emailcheck($event.target.value)\"  name=\"email\" placeholder=\"\" formControlName=\"email\">\n                      <div *ngIf=\"register.controls['email'].invalid && register.controls['email'].touched\">\n                        <div *ngIf=\"register.controls['email']\">\n                        <span> enter valid email</span>\n                      </div>\n                    </div>\n                  \n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Phone No.</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" name=\"phno\" placeholder=\"\" formControlName=\"phno\" >\n                      <div *ngIf=\"register.controls['phno'].invalid && register.controls['phno'].touched\">\n                        <div *ngIf=\"register.controls['phno']\">\n                        <span> enter valid phone no</span>\n                      </div>\n                    </div>\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Dob</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"date\" class=\"form-control\" name=\"dob\" placeholder=\"\" formControlName=\"dob\">\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-3\">\n                    <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Gender</label>\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"inlineRadio1\" value=\"male\" formControlName=\"gender\">\n                            <label class=\"form-check-label\" for=\"inlineRadio1\">male</label>\n                          </div>\n                          <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"inlineRadio1\" value=\"female\" formControlName=\"gender\">\n                            <label class=\"form-check-label\" for=\"inlineRadio1\">Female</label>\n                          </div>\n                    </div>\n                  </div>\n             \n                  <div class=\"form-group row mb-3\">\n                    <label for=\"exampleFormControlSelect1\" class=\"col-sm-3 col-form-label\">Country</label>\n                    <div class=\"col-sm-9\">\n                        <select (change)=\"getstatesbycountryid($event.target.value)\" class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"countryId\" formControlName=\"countryId\">\n                          \n                          <option *ngFor=\"let country of countries|keyvalue\" [value]=\"country.key\">{{country.value}}</option>\n                            \n                            \n                          </select>\n                    </div>\n                  </div>  \n                  <div class=\"form-group row mb-3\">\n                    <label for=\"exampleFormControlSelect1\" class=\"col-sm-3 col-form-label\">State</label>\n                    <div class=\"col-sm-9\">\n                        <select (change)=\"getcitiesbystateid($event.target.value)\" class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"stateId\" formControlName=\"stateId\">\n                            <option *ngFor=\"let state of states|keyvalue\" [value]=\"state.key\">{{state.value}}</option>\n                           \n                          </select>\n                    </div>\n                  </div> \n                  <div class=\"form-group row mb-3\">\n                    <label for=\"exampleFormControlSelect1\" class=\"col-sm-3 col-form-label\">City</label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"cityId\" formControlName=\"cityId\">\n                            <option *ngFor=\"let city of cities|keyvalue\" [value]=\"city.key\">{{city.value}}</option>\n                            \n                          </select>\n                    </div>\n                  </div>      \n                            \n                   <div class=\"text-center mt-4\"> \n                    <button type=\"reset\" class=\"btn btn-secondary \">Reset</button>\n                    <button  type=\"submit\" class=\"btn btn-primary mx-4\" [disabled]=\"!register.valid\" (click)=\"emailcheck(register)\">Register</button>\n                   </div>\n                   \n            </form>\n         \n          </div>\n         \n            </div>\n      <div class=\"col-md-7 mt-5\">\n       <img src=\"../../assets/pic-1.png\" class=\"vert-move\">\n      </div>\n      \n     \n    </div>\n    </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n<div class=\"text-center mt-5\">\n    <h1>Welcome To Carrer IT...!</h1>\n   <img src=\"../../assets/download.jpg\">\n</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnlockuserService {\n\n  constructor(private http:HttpClient) { }\n\n  unlockUser(data:any){\nreturn this.http.post(`http://localhost:9090/unlock`,data,{responseType:'text'})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotpwdService {\n\n  constructor(private http:HttpClient) { }\n\n  forgotpassword(emailId:any){\n    return this.http.get(`http://localhost:9090/forgotPwd/${emailId}`,{responseType:'text'})\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  getCountries(){\n    return this.http.get(`http://localhost:9090/countries`)\n  }\n\n  getStatesByCountryId(countryId:any){\n    return this.http.get(`http://localhost:9090/states/${countryId}`)\n  }\n\n  getCityByStateId(stateId:any){\n    return this.http.get(`http://localhost:9090/cities/${stateId}`)\n  }\n\n  SaveRegisterdata(data:any){\n   return this.http.post(`http://localhost:9090/saveUser`,data ,{responseType:'text'})\n  }\n\n  emailCheckUnique(email:any){\n    return this.http.get(`http://localhost:9090/emailcheck/${email}`,{responseType:'text'})\n   }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'UMS';\n}\n","\n\n<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport {  HttpClientModule } from '@angular/common/http';\nimport { UnlockUserComponent } from './unlock-user/unlock-user.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    WelcomeComponent,\n    UnlockUserComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-info bg-gradient \">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" [routerLink]=\"'login'\"><h2>UMS</h2></a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0 \">\n               \n                <li class=\"nav-item\">\n                    <a class=\"btn btn-secondary\" ><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Logout</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UnlockuserService } from '../service/unlockuser.service';\n\n@Component({\n  selector: 'app-unlock-user',\n  templateUrl: './unlock-user.component.html',\n  styleUrls: ['./unlock-user.component.css']\n})\nexport class UnlockUserComponent implements OnInit {\n\n  constructor(private unlockservice:UnlockuserService, private pg:ActivatedRoute, private router:Router) { }\n\n  unlockuser=new FormGroup({\n   'email':new FormControl(''),\n   'tempPwd':new FormControl(''),\n   'newPwd':new FormControl(''),\n   'confirmPwd':new FormControl('')\n  })\n\n  SaveUnlockdata(){\n    this.unlockservice.unlockUser(this.unlockuser.value)\n    .subscribe((res)=>console.log(res));\n    this.router.navigate(['']);\n    alert('Account Unlock Successfully')\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n     \n      <div class=\"col-md-4 \">\n        <div class=\"card\">\n          <div class=\"text-center mb-2\">\n    <h3>Unlock Account</h3>\n          </div>\n        <form [formGroup]=\"unlockuser\" >\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"\" formControlName=\"email\">\n           \n             </div>\n             <div class=\"form-group mb-3\">\n              <label class=\"form-label\">Temprory Password</label>\n              <input type=\"password\" class=\"form-control\" name=\"tempPwd\" placeholder=\"\" formControlName=\"tempPwd\">\n             \n               </div>\n               <div class=\"form-group mb-3\">\n                <label class=\"form-label\">Choose New Password</label>\n                <input type=\"password\" class=\"form-control\" name=\"newPwd\" placeholder=\"\" formControlName=\"newPwd\">\n               \n                 </div>\n                 <div class=\"form-group mb-3\">\n                    <label class=\"form-label\">Confirm Password</label>\n                    <input type=\"password\" class=\"form-control\" name=\"confirmPwd\" placeholder=\"\" formControlName=\"confirmPwd\">\n                   \n                     </div>\n               <div class=\"text-center mt-4\"> \n                <button (click)=\"SaveUnlockdata()\"   type=\"submit\" class=\"btn btn-primary siginbtn\">Submit</button>\n               </div>\n               \n        </form>\n      \n      </div>\n     \n        </div>\n        <div class=\"col-md-7\">\n            <img src=\"../../assets/4.webp\" class=\"vert-move\">\n           </div>\n     \n    </div>\n    </div>\n \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { UnlockUserComponent } from './unlock-user/unlock-user.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  {\n    path:'',component:LoginComponent\n  },\n  \n  {\n    path:'register',component:RegistrationComponent\n  },\n  {\n    path:'welcome',component:WelcomeComponent\n  },\n  {\n    path:'unlockAcc',component:UnlockUserComponent\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ForgotpwdService } from '../service/forgotpwd.service';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\ndataformat:any\n  constructor(private loginservice:LoginService, private forgotservice:ForgotpwdService, private router:Router) { }\nsuccess:any;\n  ngOnInit(): void {\n \n  }\n\n  login=new FormGroup({\n    'email' : new FormControl('',[Validators.required,Validators.email]),\n    'pwd' : new FormControl('',[Validators.required,Validators.minLength(5)]),\n  })\n\nchech(){\n  alert('hi');\n  if(this.dataformat==\"Invalid Credentials\"){\n    alert('invalid Input');\n  }\n  else{\n    this.Saveloogindata()\n  }\n}\n  Saveloogindata(){\n    this.loginservice.saveLogin(this.login.value)\n    .subscribe((res)=>{\n      this.dataformat=res;\n      console.log(res);\n      this.success=res;\n      if(this.success=='SUCCESS'){\n        this.router.navigate(['/welcome']).then(()=>window.location.reload());\n      }\n    })\n    \n  }\n\n  forgot=new FormGroup({\n    'emailId':new FormControl('')\n  })\n\n\n  getpassword(){\nthis.forgotservice.forgotpassword(this.forgot.value.emailId).subscribe((res)=>{console.log(res)});\nalert('We have sent password to your email');\n  }\n\n \n}\n","\n<div class=\"container\">\n<div class=\"row justify-content-center mt-4\">\n  <div class=\"col-md-7\">\n   <img src=\"../../assets/1.jpg\" class=\"vert-move\">\n  </div>\n  <div class=\"col-md-5 \">\n    <div class=\"card\">\n      <div class=\"text-center mb-2\">\n<h3>Sign In</h3>\n      </div>\n    <form [formGroup]=\"login\" >\n      <div class=\"form-group mb-3\">\n        <label class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"\" formControlName=\"email\">\n        <div *ngIf=\"login.controls['email'].invalid && login.controls['email'].touched\">\n          <div *ngIf=\"login.controls['email']\">\n          <span> enter valid email</span>\n        </div>\n      </div>\n         </div>\n         <div class=\"form-group \">\n          <label class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"pwd\" placeholder=\"\" formControlName=\"pwd\">\n          <div *ngIf=\"login.controls['pwd'].invalid && login.controls['pwd'].touched\" >\n            <div *ngIf=\"login.controls['pwd']\">\n            <span> enter Minimum 5 letters</span>\n          </div>\n        </div>\n           </div>\n           <div class=\"text-center mt-4\"> \n            <button  type=\"submit\" class=\"btn btn-primary siginbtn\" [disabled]=\"!login.valid\" (click)=\"Saveloogindata()\">Sign In</button>\n           </div>\n           \n    </form>\n   <div class=\"row mt-3\">\n    <div class=\"col-md-9\">\n      <a href=\"#\" class=\"text-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Forgot Password</a>\n    </div>\n    <div class=\"col-md-3\">\n      <a routerLink=\"/register\" class=\"text-success\">Sign-Up</a>\n    </div>\n   </div>\n  </div>\n \n    </div>\n \n</div>\n</div>\n\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\">Forgot Password</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"forgot\">\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"text\" class=\"form-control\" name=\"emailId\" placeholder=\"\" formControlName=\"emailId\">\n            <div *ngIf=\"forgot.controls['emailId'].invalid && forgot.controls['emailId'].touched\">\n              <div *ngIf=\"forgot.controls['emailId']\">\n              <span> enter valid email</span>\n            </div>\n          </div>\n          </div>\n             <hr>\n             <div class=\"mt-4\"> \n             <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button (click)=\"getpassword()\" type=\"submit\" class=\"btn btn-primary mx-4\">Submit</button>\n        </div>\n             </form>\n      </div>\n    \n    </div>\n  </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}